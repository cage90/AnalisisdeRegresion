require(stats)
base<-data.frame(Seatbelts)

##analisis exploratorio
names(base)
pairs(base)#grafica en pares las variables 
cor(base)
##modelo propuesto anteriormente
nulo<- lm(drivers ~1, data=base)#modelo nulo se hace la variable con una constante
completo <- lm(drivers~ . , data=base)##el punto es como si pusieramos todas las var independientes

step(nulo,scope=list(lower=nulo,upper=completo),direccion="forward")#step calcula el AIC para calcular
#el mejor medolo el que tenga el
#AIC menor

mod1<-lm(formula = drivers ~ DriversKilled + front + rear + law + VanKilled, data = base)
summary(mod1)
#si la variable es menos .05 en pr(>|t|) es significativa para el modelo
#con la finalidad de observar aspectos basicos como la r cuadrada
#ajustada que nos permite conocer la variabilidad explicada del modelo,
#los errores de residuos al standar ,la significancia de las variables
#el estadistrico F y el p-value para ver el ajuste del modelo
#del estadistico F se espera que sea mayor a uno y p-value menor a .05 
#para rechazar la hipotesis nula
#la prueba de hipotesis que se aplica en el estadistico F es 
#h0:B0,B1,B2,...,Bk=0
#ha:almenos un Bj diferente de cero
#aqui esperamos rechazar la hipotesis nula,por lo que el valor p-value
#debe ser <.05 y ademas el estadistico F debe ser mayor a 1
#Al parecer tenemos un buen modelo segun estos indicadores
##una vez que elegimos modelo revisamos los sig. indicadores del modelo
#1) r^2 ajustada-> explica la variabilidad del modelo (aprox >.60)
#2)error estandar -> cercano a 0
#3) significancia de las var
#indep->p-value<.05 del estadistico t
#4) Estadistico F>1, p-value <.05

##PRUEBAS FORMALES DE LOS SUPUESTOS####
shapiro.test(rstudent(mod1))##prueba shapio para normalidad 
#aqui esperamos no rechazar la hip nuÃ±a por lo que el valor 
#de p-value debe ser mayor a .05(la h0:los errores se distribuyen normalmente )
#aqui observamos que p-value es de .9973 por lo que podemos decir que no rechazamos la hip nula,
#es decir,los errores se distribuyen normal(si rechazamos la h0 no se pasa el supuesto)
require(lmtest)#descargar la libreria para poder correr el bptest
bptest(mod1)##prueba breusch pagan que permite ver autocorrelacion
#aqui esperamos no rechazar la hip nula(h0:no hay dos variables que esten aportando
#lo mismo al modelo) es decir un p-value mayor a .05,este modelo nos permite 
#saber que no  hay mas de dos variables que aporten lo mismo al modelo, en este caso
#tenemos un p-value=.0298 por lo que rechazamos la hip nula que es lo que estabamos 
